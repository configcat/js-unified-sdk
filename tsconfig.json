{
  /* Common TS compiler settings for compilation outputs, IDEs (like VSCode) and test runner (Mocha) */
  "compilerOptions": {
    "target": "ESNext",
    "module": "ESNext",
    "moduleResolution": "Node",
    // We only use const enums internally (to reduce build output size) but we want to provide
    // normal enums for consumers, so we strip const from enums during build (see gulpfile.js).
    "preserveConstEnums": true,
    "lib": [
      "DOM", // APIs used: setTimeout, clearTimeout
      "ES2015", // APIs used: Promise (.race) (polyfilled)
      "ES2017.Object", // APIs used: Object.values (polyfilled), Object.entries (polyfilled)
      "ES2021.WeakRef", // APIs used: WeakRef (only used if available)
      "ES2021.Promise" // APIs used: AggregateError (only used if available)
    ],
    "paths": {
      // Keep this in sync with the imports listed in package.json!
      "#lib/browser": ["./lib/esm/browser/index.root"],
      "#lib/chromium-extension": ["./lib/esm/chromium-extension/index"],
      "#lib/deno": ["./lib/esm/deno/index"],
      "#lib/node": ["./lib/esm/node/index.root"],
      "#lib": ["./lib/esm/index"],
      "#lib/*": ["./lib/esm/*"]
    },
    "typeRoots": ["./node_modules/@types", "./types"],
    // Prevent typings for tests (mocha, chai, etc.) from bleeding into build source files.
    // (Wish we had more fine-grained control over what typings are included in what part of
    // the project... Something like this: https://github.com/microsoft/TypeScript/issues/33407)
    "types": ["chrome", "node", "tunnel"]
  },
  "exclude": [
    "node_modules/",
    "dist/",
    "extra-checks/",
    "lib/",
    "samples/",
    "types/"
  ]
}
